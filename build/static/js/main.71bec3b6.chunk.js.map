{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","didMountRef","useRef","useContext","a","signOut","url","fetch","response","blob","data","File","type","current","axios","get","headers","process","email","uid","then","catch","e","formdata","FormData","append","getFile","photoURL","avatar","name","post","console","log","className","onClick","height","projectID","userName","userSecret","Login","id","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","App","style","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71bec3b6.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nexport const auth = firebase.initializeApp ({\r\n    apiKey: \"AIzaSyDSH7e8gEHsvnDaYlmxyKzcU5V_NlEFsrE\",\r\n    authDomain: \"reactchat-7479d.firebaseapp.com\",\r\n    projectId: \"reactchat-7479d\",\r\n    storageBucket: \"reactchat-7479d.appspot.com\",\r\n    messagingSenderId: \"542099725511\",\r\n    appId: \"1:542099725511:web:c846f624d49e3e5e09f2e2\"\r\n  }).auth();","import React, { useContext, useState, useEffect } from \"react\"\r\n\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() { return useContext(AuthContext) }\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [user, setUser] = useState()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      setUser(user)\r\n      setLoading(false)\r\n      history.push('/chats')\r\n    })\r\n  }, [user, history])\r\n\r\n  const value = { user }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useRef, useState, useEffect } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { ChatEngine } from 'react-chat-engine'\r\n\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nimport { auth } from \"../firebase\"\r\n\r\nexport default function Chats() {\r\n  const didMountRef = useRef(false)\r\n  const [ loading, setLoading ] = useState(true)\r\n  const { user } = useAuth()\r\n  const history = useHistory()\r\n\r\n  async function handleLogout() {\r\n    await auth.signOut()\r\n    history.push(\"/\")\r\n  }\r\n\r\n  async function getFile(url) {\r\n    let response = await fetch(url);\r\n    let data = await response.blob();\r\n    return new File([data], \"test.jpg\", { type: 'image/jpeg' });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) {\r\n      didMountRef.current = true\r\n\r\n      if (!user || user === null) {\r\n        history.push(\"/\")\r\n        return\r\n      }\r\n      \r\n      // Get-or-Create should be in a Firebase Function\r\n      axios.get(\r\n        'https://api.chatengine.io/users/me/',\r\n        { headers: { \r\n          \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\r\n          \"user-name\": user.email,\r\n          \"user-secret\": user.uid\r\n        }}\r\n      )\r\n\r\n      .then(() => setLoading(false))\r\n\r\n      .catch(e => {\r\n        let formdata = new FormData()\r\n        formdata.append('email', user.email)\r\n        formdata.append('username', user.email)\r\n        formdata.append('secret', user.uid)\r\n\r\n        getFile(user.photoURL)\r\n        .then(avatar => {\r\n          formdata.append('avatar', avatar, avatar.name)\r\n\r\n          axios.post(\r\n            'https://api.chatengine.io/users/',\r\n            formdata,\r\n            { headers: { \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY }}\r\n          )\r\n          .then(() => setLoading(false))\r\n          .catch(e => console.log('e', e.response))\r\n        })\r\n      })\r\n      // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    }\r\n  }, [user, history])\r\n  \r\n\r\n  if (!user || loading) return <div />\r\n\r\n  return (\r\n    <div className='chats-page'>\r\n      <div className='nav-bar'>\r\n        <div className='logo-tab'>\r\n          ReactChat\r\n        </div>\r\n\r\n        <div onClick={handleLogout} className='logout-tab'>\r\n          Logout\r\n        </div>\r\n      </div>\r\n\r\n      <ChatEngine \r\n        height='calc(100vh - 66px)'\r\n        projectID={process.env.REACT_APP_CHAT_ENGINE_ID}\r\n        userName={user.email}\r\n        userSecret={user.uid}\r\n      />\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\n\r\nimport { GoogleOutlined } from '@ant-design/icons'\r\n\r\nimport firebase from \"firebase/app\"\r\n\r\nimport { auth } from \"../firebase\"\r\n\r\nexport default function Login() {\r\n  return (\r\n    <div id='login-page'>\r\n      <div id='login-card'>\r\n        <h2>Welcome to ReactChat!</h2>\r\n\r\n        <div\r\n          className='login-button google'\r\n          onClick={() => auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())}\r\n        >\r\n          <GoogleOutlined /> Sign In with Google\r\n        </div>\r\n\r\n        <br/><br/>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\"\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport { AuthProvider } from \"../contexts/AuthContext\"\n\nimport Chats from \"./Chats\"\nimport Login from \"./Login\"\n\nfunction App() {\n  return (\n    <div style={{ fontFamily: 'Avenir' }}>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/chats\" component={Chats} />\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}